# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "usbhid"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  boot.initrd.postDeviceCommands = ''
    mkdir -p /mnt-root/disk0
    mount -t ext4 /dev/disk/by-label/${config.disk.rootDiskLabel} /mnt-root/disk0
    mkdir -p /mnt-root/disk0/nixos_roots/current
    echo "Creating required persist directory"
    mkdir -p /mnt-root/disk0/nix/persist/system/var/lib/nixos
  '';

  fileSystems."/" = {
    device = "/disk0/nixos_roots/current";
    fsType = "none";
    options = ["bind"];
  };

  fileSystems."/disk" = {
    device = "/dev/disk/by-label/${config.disk.rootDiskLabel}";
    fsType = "ext4";
    neededForBoot = true;
  };

  fileSystems."/nix" = {
    device = "/disk/nix";
    fsType = "none";
    options = ["bind"];
  };

  fileSystems."/boot/efi" = {
    device = "/dev/disk/by-uuid/CE99-F9B3";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/db23da33-e5f9-4957-acad-84a44ff99841";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
